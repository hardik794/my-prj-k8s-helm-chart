---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: mysql-pvc
spec:
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 1Gi
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: mysql-deployment
spec:
    replicas: 1
    selector:
        matchLabels:
            app: mysql
    template:
        metadata:
            labels:
                app: mysql
        spec:
            volumes:
                -   name: mysql-pv
                    persistentVolumeClaim:
                        claimName: mysql-pvc
            containers:
                -   name: mysql
                    image: "{{ .Values.mysql.image }}:{{ .Values.mysql.tag }}"
                    imagePullPolicy: {{ .Values.mysql.imagePullPolicy }}
                    ports:
                        -   containerPort: 3306
                    env:
                        -   name: MYSQL_DATABASE
                            value: server
                        -   name: MYSQL_ROOT_PASSWORD
                            valueFrom:
                                secretKeyRef:
                                    name: mysql-cred
                                    key: db_password
                                    optional: false
                        -   name: MYSQL_USER
                            valueFrom:
                                secretKeyRef:
                                    name: mysql-cred
                                    key: db_user
                                    optional: false
                        -   name: MYSQL_PASSWORD
                            valueFrom:
                                secretKeyRef:
                                    name: mysql-cred
                                    key: db_password
                                    optional: false
                    volumeMounts:
                        -   mountPath: /var/lib/mysql/data
                            name: mysql-pv
                            subPath: mysql

---
apiVersion: v1
kind: Service
metadata:
    name: mysql-svc
spec:
    ports:
        -   port: 3306
            protocol: TCP
    selector:
        app: mysql

---
apiVersion: v1
kind: Secret
metadata:
    name: mysql-cred
type: Opaque
data:
    db_password: {{ .Values.mysql.password | b64enc }}
stringData:
    db_user: {{ .Values.mysql.user }}

---
apiVersion: batch/v1
kind: Job
metadata:
    name: create-mysql-db
spec:
    backoffLimit: 9
    template:
        spec:
            volumes:
                -   name: mysql-init-script
                    configMap:
                        name: mysql-init-script
                        defaultMode: 0777
            containers:
                -   name: create-db
                    image: "{{ .Values.mysql.image }}:{{ .Values.mysql.tag }}"
                    imagePullPolicy: {{ .Values.mysql.imagePullPolicy }}
                    volumeMounts:
                    -   name: mysql-init-script
                        mountPath: /bootstrap
                    command:
                        -   "/bin/sh"
                        -   "-c"
                        -   "/bootstrap/bootstrap.sh"
                    env:
                        -   name: DB
                            value: "{{ .Values.mysql.database }}"
                        -   name: MYSQLPORT
                            value: "3306"
                        -   name: MYSQLUSER
                            valueFrom:
                                secretKeyRef:
                                    name: mysql-cred
                                    key: db_user
                                    optional: false
                        -   name: MYSQLPASSWORD
                            valueFrom:
                                secretKeyRef:
                                    name: mysql-cred
                                    key: db_password
                                    optional: false
                        -   name: MYSQLHOST
                            valueFrom:
                                configMapKeyRef:
                                    name: mysql-config
                                    key: MYSQL_HOST
                                    optional: false
            restartPolicy: OnFailure

---
apiVersion: v1
kind: ConfigMap
metadata:
    name: mysql-config
data:
    MYSQL_HOST: {{.Values.mysql.host }}
    SPRING_DATASOURCE_URL: "jdbc:mysql://{{.Values.mysql.host }}:3306/{{ .Values.mysql.database }}"

---
apiVersion: v1
kind: ConfigMap
metadata:
    name: mysql-init-script
data:
    bootstrap.sh: |-
        #!/bin/sh
        export IFS=";"
        if mysql -u$MYSQLUSER -p$MYSQLPASSWORD -h$MYSQLHOST -e "use $DATABASE_NAME";then
            echo "Database $DATABASE_NAME already exists. Exiting."
        else
            echo Create database
            mysql -u$MYSQLUSER -p$MYSQLPASSWORD -h$MYSQLHOST -e "CREATE DATABASE $DATABASE_NAME"
        fi
